{"ast":null,"code":"import React,{useRef}from'react';import{useFrame}from'@react-three/fiber';import PhongShader from'./PhongShader';// sphere buffer geometry variables\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var phiStart=0;var phiLength=Math.PI*2;var thetaStart=0;var thetaLength=Math.PI;//mesh rotation increment\nvar rotationIncrement=0.001;// returns a spinning with variables coming in from the call location, phong shader component is attached\nvar SpinningSphere=function SpinningSphere(props){var mesh=useRef(null);useFrame(function(){return mesh.current.rotation.x=mesh.current.rotation.y+=rotationIncrement;});return/*#__PURE__*/_jsxs(\"mesh\",{position:props.position,ref:mesh,children:[/*#__PURE__*/_jsx(\"sphereBufferGeometry\",{args:[props.scale,props.width,props.height,phiStart,phiLength,thetaStart,thetaLength]}),/*#__PURE__*/_jsx(\"meshStandardMaterial\",{wireframe:props.wireframe}),/*#__PURE__*/_jsx(PhongShader,{attach:\"material\",wireframe:props.wireframe,color:props.color,shininess:props.shininess})]});};export default SpinningSphere;","map":{"version":3,"names":["React","useRef","useFrame","PhongShader","jsx","_jsx","jsxs","_jsxs","phiStart","phiLength","Math","PI","thetaStart","thetaLength","rotationIncrement","SpinningSphere","props","mesh","current","rotation","x","y","position","ref","children","args","scale","width","height","wireframe","attach","color","shininess"],"sources":["/home/danny/Documents/Programming/Solar/src/components/SpinningSphere.js"],"sourcesContent":["import React, { useRef } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport PhongShader from './PhongShader';\n\n// sphere buffer geometry variables\nlet phiStart = 0;\nlet phiLength = Math.PI *2\nlet thetaStart = 0;\nlet thetaLength = Math.PI;\n\n//mesh rotation increment\nlet rotationIncrement = 0.001;\n\n// returns a spinning with variables coming in from the call location, phong shader component is attached\n\nconst SpinningSphere = (props) => {\n  const mesh = useRef(null);\n  useFrame(()=>(mesh.current.rotation.x = mesh.current.rotation.y += rotationIncrement));\n  return (    \n    <mesh position={props.position} ref={mesh}>\n      <sphereBufferGeometry args={[props.scale, props.width, props.height, phiStart, phiLength, thetaStart, thetaLength]}/>\n        <meshStandardMaterial wireframe={props.wireframe} /> \n      <PhongShader attach=\"material\" wireframe={props.wireframe} color={props.color} shininess={props.shininess}/>\n    </mesh>\n  )\n}\n\nexport default SpinningSphere;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,MAAM,KAAQ,OAAO,CACrC,OAASC,QAAQ,KAAQ,oBAAoB,CAC7C,MAAO,CAAAC,WAAW,KAAM,eAAe,CAEvC;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBACA,GAAI,CAAAC,QAAQ,CAAG,CAAC,CAChB,GAAI,CAAAC,SAAS,CAAGC,IAAI,CAACC,EAAE,CAAE,CAAC,CAC1B,GAAI,CAAAC,UAAU,CAAG,CAAC,CAClB,GAAI,CAAAC,WAAW,CAAGH,IAAI,CAACC,EAAE,CAEzB;AACA,GAAI,CAAAG,iBAAiB,CAAG,KAAK,CAE7B;AAEA,GAAM,CAAAC,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAIC,KAAK,CAAK,CAChC,GAAM,CAAAC,IAAI,CAAGhB,MAAM,CAAC,IAAI,CAAC,CACzBC,QAAQ,CAAC,iBAAK,CAAAe,IAAI,CAACC,OAAO,CAACC,QAAQ,CAACC,CAAC,CAAGH,IAAI,CAACC,OAAO,CAACC,QAAQ,CAACE,CAAC,EAAIP,iBAAiB,EAAC,CAAC,CACtF,mBACEP,KAAA,SAAMe,QAAQ,CAAEN,KAAK,CAACM,QAAS,CAACC,GAAG,CAAEN,IAAK,CAAAO,QAAA,eACxCnB,IAAA,yBAAsBoB,IAAI,CAAE,CAACT,KAAK,CAACU,KAAK,CAAEV,KAAK,CAACW,KAAK,CAAEX,KAAK,CAACY,MAAM,CAAEpB,QAAQ,CAAEC,SAAS,CAAEG,UAAU,CAAEC,WAAW,CAAE,EAAE,cACnHR,IAAA,yBAAsBwB,SAAS,CAAEb,KAAK,CAACa,SAAU,EAAG,cACtDxB,IAAA,CAACF,WAAW,EAAC2B,MAAM,CAAC,UAAU,CAACD,SAAS,CAAEb,KAAK,CAACa,SAAU,CAACE,KAAK,CAAEf,KAAK,CAACe,KAAM,CAACC,SAAS,CAAEhB,KAAK,CAACgB,SAAU,EAAE,GACvG,CAEX,CAAC,CAED,cAAe,CAAAjB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}