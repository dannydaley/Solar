{"ast":null,"code":"//help from this guide on ripple effect https://www.youtube.com/watch?v=wRmeFtRkF-8&ab_channel=AlvanCalebArulandu\nimport React,{useRef}from\"react\";import whitedot from\"./images/whitedot.png\";import{useLoader,useFrame}from\"@react-three/fiber\";import{useMemo,useCallback}from\"react\";import*as THREE from\"three\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var dotSize=2;var dotSizeAttenuation=false;var dotTransparent=true;var dotAlphaTest=1;var dotOpacity=1;var Points=function Points(props){var count=250;// amount of points along 1 axis of the grid\nvar seperation=2;//distance between points\nvar t=0;//phase shift;\nvar f=0.0005;//frequency\nvar a=10;//amplitude\nvar timeSpeed=useRef(document.getElementById(\"waveSpeedSlider\").value);// DEPRECATED AND REPLACED BY SLIDER AND STATE IN APP JS\nvar positionSteps=1;var positionIncrements=3;//graph for sin wave animation on points\nvar graph=useCallback(function(x,z){return Math.sin(f*(Math.pow(x,2)+Math.pow(z,2)+t))*a;},[t,f,a]);//set up texture (dot image)\nvar imageTexture=useLoader(THREE.TextureLoader,whitedot);// set up reference\nvar bufferRef=useRef();//nested loop for dot positions\nvar positions=useMemo(function(){//initialize empty dot array\nvar positions=[];//outer loop x axis increment\nfor(var xi=0;xi<count;xi++){//inner loop z axis increment\nfor(var zi=0;zi<count;zi++){// set x , z\nvar x=seperation*(xi-count/2);var z=seperation*(zi-count/2);// x , z ranges = (-count min, +count max)\n// set y to memo graph for sin animation\nvar y=graph(x,z);// apply positions to axes\npositions.push(x,y,z);}}return new Float32Array(positions);},[count,seperation,graph]);//dependencies from useMemo\n//animation\nuseFrame(function(){t-=props.waveSpeed;// t -= timeSpeed.current;\n// get positions from bufferRef\nvar positions=bufferRef.current.array;//positionIncrement variable start point\nvar i=0;// nested for loop to iterate throuigh position / 2 to pass into the graph to animate\nfor(var xi=0;xi<count;xi++){for(var zi=0;zi<count;zi++){var x=seperation*(xi-count/2);var z=seperation*(zi-count/2);//pass to animation graph\npositions[i+positionSteps]=graph(x,z);//increment i\ni+=positionIncrements;}}bufferRef.current.needsUpdate=true;});return/*#__PURE__*/_jsxs(\"points\",{children:[/*#__PURE__*/_jsx(\"bufferGeometry\",{attach:\"geometry\",children:/*#__PURE__*/_jsx(\"bufferAttribute\",{attachObject:[\"attributes\",\"position\"],ref:bufferRef,array:positions,count:positions.length/3,itemSize:3})}),/*#__PURE__*/_jsx(\"pointsMaterial\",{attach:\"material\",meshStandardMaterial:imageTexture,map:imageTexture,color:0x03a062,size:dotSize,sizeAttenuation:dotSizeAttenuation,transparent:dotTransparent,alphaTest:dotAlphaTest,opacity:dotOpacity})]});};export default Points;","map":{"version":3,"names":["React","useRef","whitedot","useLoader","useFrame","useMemo","useCallback","THREE","jsx","_jsx","jsxs","_jsxs","dotSize","dotSizeAttenuation","dotTransparent","dotAlphaTest","dotOpacity","Points","props","count","seperation","t","f","a","timeSpeed","document","getElementById","value","positionSteps","positionIncrements","graph","x","z","Math","sin","pow","imageTexture","TextureLoader","bufferRef","positions","xi","zi","y","push","Float32Array","waveSpeed","current","array","i","needsUpdate","children","attach","attachObject","ref","length","itemSize","meshStandardMaterial","map","color","size","sizeAttenuation","transparent","alphaTest","opacity"],"sources":["/home/danny/Documents/Programming/Solar/src/components/Points.js"],"sourcesContent":["//help from this guide on ripple effect https://www.youtube.com/watch?v=wRmeFtRkF-8&ab_channel=AlvanCalebArulandu\nimport React, { useRef } from \"react\";\nimport whitedot from \"./images/whitedot.png\";\nimport { useLoader, useFrame } from \"@react-three/fiber\";\nimport { useMemo, useCallback } from \"react\";\nimport * as THREE from \"three\";\n\nlet dotSize = 2;\nlet dotSizeAttenuation = false;\nlet dotTransparent = true;\nlet dotAlphaTest = 1;\nlet dotOpacity = 1;\n\nconst Points = (props) => {\n    let count = 250; // amount of points along 1 axis of the grid\n    let seperation = 2; //distance between points\n    let t = 0; //phase shift;\n    let f = 0.0005; //frequency\n    let a = 10; //amplitude\n    let timeSpeed = useRef(document.getElementById(\"waveSpeedSlider\").value); // DEPRECATED AND REPLACED BY SLIDER AND STATE IN APP JS\n    let positionSteps = 1;\n    let positionIncrements = 3;\n\n    //graph for sin wave animation on points\n    const graph = useCallback(\n        (x, z) => {\n            return Math.sin(f * (x ** 2 + z ** 2 + t)) * a;\n        },\n        [t, f, a]\n    );\n\n    //set up texture (dot image)\n    const imageTexture = useLoader(THREE.TextureLoader, whitedot);\n    // set up reference\n    const bufferRef = useRef();\n    //nested loop for dot positions\n    let positions = useMemo(() => {\n        //initialize empty dot array\n        let positions = [];\n        //outer loop x axis increment\n        for (let xi = 0; xi < count; xi++) {\n            //inner loop z axis increment\n            for (let zi = 0; zi < count; zi++) {\n                // set x , z\n                let x = seperation * (xi - count / 2);\n                let z = seperation * (zi - count / 2);\n                // x , z ranges = (-count min, +count max)\n                // set y to memo graph for sin animation\n                let y = graph(x, z);\n                // apply positions to axes\n                positions.push(x, y, z);\n            }\n        }\n        return new Float32Array(positions);\n    }, [count, seperation, graph]); //dependencies from useMemo\n    //animation\n    useFrame(() => {\n        t -= props.waveSpeed;\n        // t -= timeSpeed.current;\n        // get positions from bufferRef\n        const positions = bufferRef.current.array;\n        //positionIncrement variable start point\n        let i = 0;\n        // nested for loop to iterate throuigh position / 2 to pass into the graph to animate\n        for (let xi = 0; xi < count; xi++) {\n            for (let zi = 0; zi < count; zi++) {\n                let x = seperation * (xi - count / 2);\n                let z = seperation * (zi - count / 2);\n\n                //pass to animation graph\n                positions[i + positionSteps] = graph(x, z);\n\n                //increment i\n                i += positionIncrements;\n            }\n        }\n        bufferRef.current.needsUpdate = true;\n    });\n\n    return (\n        <points>\n            <bufferGeometry attach=\"geometry\">\n                <bufferAttribute\n                    attachObject={[\"attributes\", \"position\"]}\n                    ref={bufferRef}\n                    array={positions}\n                    count={positions.length / 3}\n                    itemSize={3}\n                />\n            </bufferGeometry>\n            <pointsMaterial\n                attach=\"material\"\n                meshStandardMaterial={imageTexture}\n                map={imageTexture}\n                color={0x03a062}\n                size={dotSize}\n                sizeAttenuation={dotSizeAttenuation}\n                transparent={dotTransparent}\n                alphaTest={dotAlphaTest}\n                opacity={dotOpacity}\n            />\n        </points>\n    );\n};\n\nexport default Points;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}